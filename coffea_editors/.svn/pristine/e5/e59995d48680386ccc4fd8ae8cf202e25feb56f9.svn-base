package net.sourceforge.coffea.editors.figures;

import java.util.List;

import org.eclipse.draw2d.Label;
import org.eclipse.jdt.internal.ui.JavaPluginImages;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;
import org.eclipse.uml2.uml.VisibilityKind;

import net.sourceforge.coffea.uml2.model.IAttributeService;

/** Figure displaying a set of properties */
@SuppressWarnings("restriction")
public class PropertiesFigure extends MemberSetFigure<IAttributeService> {

	/**
	 * Default (visibility ) property icon creation
	 * @return Created icon
	 */
	public static Image createDefaultPropertyIcon() {
		ImageDescriptor img = JavaPluginImages.DESC_FIELD_DEFAULT;
		return img.createImage();
	}
	
	/**
	 * Public property icon creation
	 * @return Created icon
	 */
	public static Image createPublicPropertyIcon() {
		ImageDescriptor img = JavaPluginImages.DESC_FIELD_PUBLIC;
		return img.createImage();
	}
	
	/**
	 * Public property icon creation
	 * @return Created icon
	 */
	public static Image createProtectedPropertyIcon() {
		ImageDescriptor img = JavaPluginImages.DESC_FIELD_PROTECTED;
		return img.createImage();
	}
	
	/**
	 * Private property icon creation
	 * @return Created icon
	 */
	public static Image createPrivatePropertyIcon() {
		ImageDescriptor img = JavaPluginImages.DESC_FIELD_PRIVATE;
		return img.createImage();
	}
	
	/**
	 * Construction of a figure displaying a set of properties
	 * @param dsplMbrsSrvs
	 * List of services for all the displayed properties
	 */
	public PropertiesFigure(List<IAttributeService> dsplMbrsSrvs) {
		super(dsplMbrsSrvs);
		for(IAttributeService propertySrv : displayedMembersServices) {
			propertySrv.setUpUMLModelElement();
			String visibility = new String();
			Image icon = null;
			if(
					propertySrv.getUMLElement().getVisibility().equals(
							VisibilityKind.PRIVATE_LITERAL
					)
			) {
				visibility = "-";
				icon = createPrivatePropertyIcon();
			}
			else if(
					propertySrv.getUMLElement().getVisibility().equals(
							VisibilityKind.PROTECTED_LITERAL
					)
			) {
				visibility = "#";
				icon = createProtectedPropertyIcon();
			}
			else if(
					propertySrv.getUMLElement().getVisibility().equals(
							VisibilityKind.PUBLIC_LITERAL
					)
			) {
				visibility = "+";
				icon = createPublicPropertyIcon();
			}
			else {
				icon = createDefaultPropertyIcon();
			}
			String name = propertySrv.getSimpleName();
			Label propertyLabel = 
				new Label(visibility + ' ' +name);
			add(propertyLabel, icon);
		}
	}

}